{"version":3,"sources":["components/DataProvider.js","components/FormInput.js","components/ListItem.js","components/List.js","components/Footer.js","App.js","index.js"],"names":["DataContext","createContext","DataProvider","props","useState","todos","setTodos","useEffect","todoStore","JSON","parse","localStorage","getItem","setItem","stringify","Provider","value","children","FormInput","useContext","todoName","setTodoName","todoInput","useRef","current","focus","autoComplete","onSubmit","e","preventDefault","name","complete","type","id","ref","required","placeholder","onChange","target","toLowerCase","ListItem","todo","checkComplete","handleEditTodos","onEdit","setOnEdit","editValue","setEditValue","onClick","handleSave","htmlFor","className","checked","disabled","List","switchComplete","newTodos","forEach","index","map","Footer","checkAll","setCheckAll","length","filter","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d88e3671.chunk.js","sourcesContent":["import React, {useState, useEffect, createContext} from 'react'\r\n\r\nexport const DataContext = createContext();\r\n\r\nexport const DataProvider = (props) => {\r\n    const[todos, setTodos] = useState([])\r\n\r\n    useEffect(() => {\r\n        const todoStore = JSON.parse(localStorage.getItem('todoStore'))\r\n        if(todoStore) setTodos(todoStore)},[])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todoStore', JSON.stringify(todos))\r\n        \r\n    }, [todos])\r\n\r\n    \r\n        \r\n    return (\r\n        <DataContext.Provider value={[todos, setTodos]}>\r\n            {props.children}\r\n        </DataContext.Provider>\r\n    )\r\n}\r\n","import React,{useState, useContext, useRef, useEffect} from 'react'\r\nimport {DataContext} from './DataProvider'\r\nexport default function FormInput() {\r\n    const [todos, setTodos] = useContext(DataContext);\r\n    const [todoName, setTodoName] = useState('');\r\n    const todoInput = useRef();\r\n    \r\n    const addTodo = e =>{\r\n        e.preventDefault();\r\n        setTodos([...todos, {name: todoName, complete: false}])\r\n        setTodoName('');\r\n        todoInput.current.focus();\r\n    }\r\n    useEffect(() => {\r\n       todoInput.current.focus();\r\n        \r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <form autoComplete=\"off\" onSubmit={addTodo}>\r\n        <input type=\"text\" name=\"todos\" id=\"todos\" ref={todoInput}\r\n        required placeholder=\"What needs to be done?\"\r\n        value={todoName} onChange={e => setTodoName(e.target.value.toLowerCase())}/>\r\n        <button type=\"submit\">Create Task</button>\r\n        </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function ListItem({todo,id,checkComplete, handleEditTodos}) {\r\n  const [onEdit, setOnEdit] = useState(false)\r\n  const [editValue, setEditValue] = useState(todo.name)\r\n  const handleOnEdit = () =>{\r\n     setOnEdit(true)\r\n  }\r\n  const handleSave = id =>{\r\n    setOnEdit(false)\r\n    if(editValue){\r\n      handleEditTodos(editValue,id)\r\n    }else{\r\n      setEditValue(todo.name)\r\n    }\r\n  }\r\n\r\n  if(onEdit){\r\n    return (\r\n      <ul>\r\n          \r\n          <li>\r\n            \r\n              <input type=\"text\" id=\"editValue\" value={editValue} \r\n              name=\"editValue\" \r\n              onChange={e => setEditValue(e.target.value.toLowerCase())}/>\r\n\r\n              <button onClick={() => handleSave(id)}>Save</button>\r\n          </li>\r\n      </ul>\r\n    )\r\n}\r\n  \r\n  \r\n  else{\r\n\r\n    return (\r\n      <ul>\r\n          \r\n          <li>\r\n            <label htmlFor={id} className={todo.complete ? \"active\" : \"\"}>\r\n              <input type=\"checkbox\" id={id} checked={todo.complete}\r\n              onChange = {() => checkComplete(id)} />\r\n              {todo.name}\r\n              </label>\r\n              <button disabled={todo.complete} onClick={handleOnEdit}>Edit</button>\r\n          </li>\r\n      </ul>\r\n    )\r\n}\r\n  }","import React, {useContext} from 'react'\r\nimport ListItem from './ListItem'\r\nimport {DataContext} from './DataProvider'\r\n\r\nexport default function List() {\r\n    const[todos, setTodos] = useContext(DataContext);\r\n    \r\n  const switchComplete = id =>{\r\n      const newTodos = [...todos]\r\n      newTodos.forEach((todo, index) =>{\r\n          if(index===id)\r\n          todo.complete = !todo.complete\r\n      })\r\n      setTodos(newTodos)\r\n  }\r\n\r\n  const handleEditTodos = (editValue, id) =>{\r\n      const newTodos = [...todos]\r\n      newTodos.forEach((todo,index) => {\r\n          if(index === id){\r\n              todo.name = editValue\r\n          }\r\n      })\r\n      setTodos(newTodos)\r\n  }\r\n    return (\r\n       \r\n            <ul>\r\n                {\r\n                    todos.map((todo, index) => (\r\n                        <ListItem todo={todo} key={index} id={index}\r\n                        checkComplete={switchComplete} handleEditTodos={handleEditTodos} />\r\n                    ))\r\n                }\r\n            </ul>\r\n    \r\n        \r\n    )\r\n}\r\n","import React, {useContext, useState}from 'react'\r\nimport {DataContext} from './DataProvider'\r\n\r\nexport default function Footer() {\r\n    const [checkAll, setCheckAll] = useState(false)\r\n    const [todos, setTodos] = useContext(DataContext)\r\n    const handleCheckAll = () =>{\r\n        const newTodos = [...todos]\r\n        newTodos.forEach(todo =>{\r\n            todo.complete = !checkAll\r\n        })\r\n        setTodos(newTodos)\r\n        setCheckAll(!checkAll)\r\n    }\r\n\r\n    const deleteTodo = () =>{\r\n        const newTodos = todos.filter(todo =>{\r\n            return todo.complete === false\r\n        })\r\n        setTodos(newTodos)\r\n        setCheckAll(false)\r\n    }\r\n    return (\r\n        <>\r\n        {\r\n             todos.length === 0? <h2>Congratulations! Completed To Do</h2>\r\n             :<div className=\"row\">\r\n                <label htmlFor=\"all\">\r\n                    <input type=\"checkbox\" name=\"all\" id=\"all\" \r\n                    onChange={handleCheckAll} checked={checkAll}/>\r\n                    ALL\r\n                </label>\r\n                <p>You have {todos.filter(todo => todo.complete === false).length} to do</p>\r\n                <button id=\"delete\" onClick={deleteTodo}>Delete</button>\r\n     </div>\r\n        }\r\n       </>\r\n\r\n    \r\n        \r\n    )\r\n}","import React from 'react';\nimport './index.css'\nimport FormInput from './components/FormInput'\nimport List from './components/List'\nimport Footer from './components/Footer'\nimport {DataProvider} from './components/DataProvider'\n\nfunction App() {\n  return (\n    <DataProvider>\n    <div className=\"App\">\n      <h1>To Do List</h1>\n      <FormInput/>\n      <List/>\n      <Footer/>\n      \n    </div>\n    </DataProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  \n    <App />, document.getElementById('root')\n);\n"],"sourceRoot":""}